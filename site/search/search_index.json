{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Portfolio","text":"<p>Hi, I'm Santosh Kumar Sah \ud83d\udc4b A passionate AI Engineer and Data Science Enthusiast working at Pixelvirt Technology. I thrive at the intersection of technology and innovation, exploring areas like:</p> <ul> <li>Artificial Intelligence &amp; Machine Learning</li> <li>Data Science &amp; Visualization</li> </ul> <p>Explore my projects, read my blog, or get in touch!</p>"},{"location":"blog/","title":"Blog","text":"<p>Stay tuned for technical articles, tutorials, and insights on:</p> <ul> <li>Python &amp; Machine Learning</li> <li>Android Development</li> <li>IoT Innovation</li> </ul>"},{"location":"contact/","title":"Contact","text":"<p>Reach out to me for collaborations or opportunities!</p> <ul> <li>Email: sahsantosh257@gmail.com</li> <li>GitHub: https://github.com/sntoshsah</li> <li>LinkedIn: https://linkedin.com/in/sahsntosh</li> </ul>"},{"location":"Learning_resources/Python/Python_basics/","title":"Python basics","text":""},{"location":"Learning_resources/Python/Python_basics/#first-python-program","title":"First Python Program","text":"<p><pre><code>print(\"Hello World!\")\n</code></pre> Output: <p>Hello World!</p></p>"},{"location":"Learning_resources/Python/Python_basics/#basic-syntax-of-python","title":"Basic Syntax of Python","text":"<p>Definition: Python syntax refers to the set of rules that defines how Python code is written and interpreted. Python is designed to be simple, clear, and easy to read. Unlike some programming languages, Python emphasizes readability and uses whitespace to structure code.</p> <p>Key Features of Python Syntax:</p> <ol> <li>No need for semicolons: Statements end with a newline by default, though semicolons can be used to separate multiple statements on a single line.</li> <li>Case-sensitive: Python differentiates between uppercase and lowercase letters (e.g., Variable and variable are distinct).</li> <li>Indentation: Used to define blocks of code, such as in loops, conditionals, or functions (explained further below).</li> <li>Comments: Start with # for single-line comments and triple quotes (''' or \"\"\") for multi-line comments.  </li> </ol>"},{"location":"Learning_resources/Python/Python_basics/#example-of-python-syntax","title":"Example of Python Syntax","text":"<pre><code># Assign values to variables\nx = 10  \ny = 20\n\n# Conditional statement\nif x &lt; y:\n    print(\"x is less than y\")\nelse:\n    print(\"x is not less than y\")\n</code></pre>"},{"location":"Learning_resources/Python/Python_basics/#comments-in-python","title":"Comments in Python","text":"<p>Definition: A comment is a line of text in Python code that is not executed by the interpreter. Comments are used to explain the code, make it more readable, or temporarily disable certain parts of the code.</p> <p>Python provides two types of comments:</p> <ol> <li>Single-line comments</li> <li>Multi-line comments</li> </ol> <p>Single-line Comments</p> <p>Single-line comments start with a # symbol. Any text after the # on the same line is treated as a comment and is ignored by the Python interpreter. Example: <pre><code># This is a single-line comment\nx = 10  # This is an inline comment\nprint(x)  # Printing the value of x\n</code></pre> Explanation:</p> <pre><code>The # symbol makes the text after it a comment.\nIn this example:\n    The first line explains the purpose of the code.\n    The inline comments next to x = 10 and print(x) provide additional context.\n</code></pre> <p>Multi-line Comments</p> <p>Python does not have a specific multi-line comment syntax like other languages. However, multi-line comments are usually implemented using a block of strings enclosed in triple quotes (''' or \"\"\"). While not technically comments, such strings are ignored by the interpreter if they are not assigned to a variable or used as a docstring. Example: <pre><code>'''\nThis is a multi-line comment.\nIt can span multiple lines\nand is useful for providing detailed explanations.\n'''\n\nx = 10\ny = 20\n\n\"\"\"\nThis part of the code adds two numbers.\nYou can use triple double-quotes as well for multi-line comments.\n\"\"\"\n\nresult = x + y\nprint(result)  # Printing the sum\n</code></pre> Explanation:</p> <pre><code>The triple quotes allow you to write a block of text, making it useful for longer explanations or documentation.\n</code></pre> <p>Practical Use <pre><code># Define a function to add two numbers\n\ndef add_numbers(a, b):\n    \"\"\"\n    This function takes two arguments, 'a' and 'b'.\n    It returns the sum of these numbers.\n    \"\"\"\n    return a + b\n\n# Call the function\nsum_result = add_numbers(5, 7)\nprint(sum_result)  # Outputs: 12\n</code></pre> Explanation:</p> <pre><code>The single-line comment explains the function definition.\nThe multi-line comment (docstring) describes what the function does.\n</code></pre>"},{"location":"Learning_resources/Python/Python_basics/#python-indentation","title":"Python Indentation","text":"<p>Definition: Indentation refers to the spaces at the beginning of a code line. Unlike many other programming languages that use braces {} to define code blocks, Python uses indentation to group statements and define the structure of the program. Consistent indentation is mandatory in Python, as improper indentation will lead to a syntax error. Rules for Indentation:</p> <ol> <li>Indentation must be consistent within the same block.</li> <li>The default indentation level is typically 4 spaces (though tabs or other levels are allowed if used consistently). Indentation is required for:<ul> <li>Loops (for, while)</li> <li>Conditionals (if, else, elif)</li> <li>Function definitions</li> <li>Class definitions</li> </ul> </li> </ol> <p>Example of Indentation <pre><code># Function with proper indentation\ndef greet(name):\n    # This line is indented\n    print(f\"Hello, {name}!\")\n\n# Using the function\ngreet(\"Alice\")\n\n# Conditional statement with indentation\nage = 18\nif age &gt;= 18:\n    print(\"You are eligible to vote.\")\nelse:\n    print(\"You are not eligible to vote.\")\n</code></pre> Incorrect Indentation Example <pre><code>def greet(name):\nprint(f\"Hello, {name}!\")  # IndentationError: expected an indented block\n</code></pre> Output: <pre><code>Traceback (most recent call last):\n  File \"/home/santosh/Desktop/Learning_docs/.venv/lib/python3.10/site-packages/markdown_exec/formatters/python.py\", line 71, in _run_python\n    exec_python(code, code_block_id, exec_globals)\n  File \"/home/santosh/Desktop/Learning_docs/.venv/lib/python3.10/site-packages/markdown_exec/formatters/_exec_python.py\", line 7, in exec_python\n    compiled = compile(code, filename=filename, mode=\"exec\")\n  File \"&lt;code block: n2&gt;\", line 2\n    print(f\"Hello, {name}!\")  # IndentationError: expected an indented block\n    ^^^^^\nIndentationError: expected an indented block after function definition on line 1\n</code></pre></p>"},{"location":"projects/ai/","title":"AI Engineering Projects","text":""},{"location":"projects/ai/#house-sales-data-analysis","title":"\ud83c\udfe0 House Sales Data Analysis","text":"<ul> <li>Worked on sales data for RealAgents.</li> <li>Technologies: Python, Pandas, Matplotlib.</li> </ul>"},{"location":"projects/ai/#city-cctv-installation","title":"\ud83d\udcf9 City CCTV Installation","text":"<ul> <li>Designed and optimized city-wide surveillance systems.</li> <li>Tools: OpenCV, FastAPI.</li> </ul>"},{"location":"projects/data_science/","title":"Data Science Projects","text":""},{"location":"projects/data_science/#exploratory-data-analysis","title":"\ud83d\udcca Exploratory Data Analysis","text":"<ul> <li>Extensive analysis of datasets to uncover hidden insights.</li> <li>Tools: Jupyter, Seaborn, Matplotlib.</li> </ul>"},{"location":"static/about/","title":"About Me","text":""},{"location":"static/about/#santosh-kumar-sah","title":"\ud83d\udc68\u200d\ud83d\udcbb Santosh Kumar Sah","text":"<ul> <li>Education: B.Sc. CSIT Graduate  </li> <li>Current Role: AI Engineer at Pixelvirt Technology  </li> <li>Passions: Data Science, Machine Learning, and IoT  </li> </ul> <p>With expertise in Python, deep learning, and system design, I aim to create impactful AI solutions. Feel free to explore my journey!</p>"}]}